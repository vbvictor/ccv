name: Go

on:
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]
    types: [opened, reopened, synchronize]

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.2'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v -cover -coverprofile=coverage.out ./...

    - name: Archive code coverage results
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage
        path: coverage.out
  
  Lint:
    name: lint
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.2'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.62

  Coverage:
    name: "Code coverage report"
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: Build
    permissions:
      contents:      read
      actions:       read
      pull-requests: write
    steps:
      - uses: fgrosse/go-coverage-report@8c1d1a09864211d258937b1b1a5b849f7e4f2682
        with:
          coverage-artifact-name: "code-coverage"
          coverage-file-name: "coverage.out"