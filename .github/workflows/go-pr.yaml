name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, reopened, synchronize]

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.2'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v -cover -coverprofile=coverage.txt ./...

    - name: Archive code coverage results
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage
        path: coverage.txt
  
  # Skip linting part as for now
  #Lint:
  #  name: lint
  #  runs-on: ubuntu-latest
  #  needs: Build
  #  steps:
  #    - uses: actions/checkout@v4
  #    - uses: actions/setup-go@v5
  #      with:
  #        go-version: '1.22.2'
  #    - name: golangci-lint
  #      uses: golangci/golangci-lint-action@v6
  #      with:
  #        version: v1.62

  Coverage:
    name: "Code coverage report"
    if: github.event_name == 'pull_request' # Do not run when workflow is triggered by push to main branch
    runs-on: ubuntu-latest
    needs: Build # Depends on the artifact uploaded by the "Build" job
    permissions:
      contents:      read
      actions:       read  # to download code coverage results from "Build" job
      pull-requests: write # write permission needed to comment on PR
    steps:
      - uses: fgrosse/go-coverage-report@v1.2.0
        with:
          coverage-artifact-name: "code-coverage"
          coverage-file-name: "coverage.txt"